{"version":3,"file":"main.js","mappings":"uCAAA,MAAMA,EAAUC,EAAQ,KAClBC,EAAQD,EAAQ,KAChBE,EAAeF,EAAQ,KAEvBG,EAAkBH,EAAQ,KAEhC,SAASI,EAASC,GAKdC,KAAKD,SAAWA,EAEhBC,KAAKC,QAAU,IAAIC,MACnBF,KAAKC,QAAQE,IAAM,6BAEnBH,KAAKI,KAAO,IAAIF,MAChBF,KAAKI,KAAKD,IAAM,oBAEhBH,KAAKK,IAAM,IAAIH,MACfF,KAAKK,IAAIF,IAAM,mBAYfH,KAAKM,MAAQ,CACT,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACvC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACvC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACvC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACvC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACvC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACvC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACvC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACvC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACvC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACvC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACvC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACvC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACvC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACvC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACvC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACvC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACvC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACvC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACvC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACv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","sources":["webpack://cake-man-near-you/./src/scripts/TileMap.js","webpack://cake-man-near-you/./src/scripts/cakeman.js","webpack://cake-man-near-you/./src/scripts/game.js","webpack://cake-man-near-you/./src/scripts/ghost.js","webpack://cake-man-near-you/./src/scripts/movingDirections.js","webpack://cake-man-near-you/./src/scripts/polyTreeNode.js","webpack://cake-man-near-you/./src/scripts/utils.js","webpack://cake-man-near-you/webpack/bootstrap","webpack://cake-man-near-you/./src/index.js"],"sourcesContent":["const Cakeman = require(\"./cakeman.js\");\nconst Ghost = require(\"./ghost.js\");\nconst PolyTreeNode = require(\"./polyTreeNode.js\");\n\nconst MovingDirection = require(\"./movingDirections.js\");\n\nfunction TileMap (tileSize) {\n\n    // I used MDN Web Documents Square TileMaps Statis Implementation. \n    // https://developer.mozilla.org/en-US/docs/Games/Techniques/Tilemaps/Square_tilemaps_implementation:_Static_maps\n\n    this.tileSize = tileSize\n\n    this.cakeman = new Image();\n    this.cakeman.src = \"./images/cakemanClosed.png\";\n    \n    this.wall = new Image();\n    this.wall.src = \"./images/wall.png\";\n\n    this.dot = new Image();\n    this.dot.src = \"./images/dot.png\";\n\n    // 0 dots\n    // 1 wall\n    // 2 empty black\n    // 3 ghost red\n    // 4 ghost blue\n    // 5 ghost purple\n    // 6 ghost pink\n    // 7 cakeman\n    // 8 score\n    \n    this.tiles = [        \n        [9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9],\n        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\n        [1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1],\n        [1,0,1,1,0,1,1,1,0,1,1,0,1,1,1,0,1,1,0,1],\n        [1,0,1,1,0,1,1,1,0,1,1,0,1,1,1,0,1,1,0,1],\n        [1,0,1,1,0,1,1,1,0,1,1,0,1,1,1,0,1,1,0,1],\n        [1,0,0,0,4,0,0,0,0,0,0,0,0,0,0,3,0,0,0,1],\n        [1,0,1,1,0,1,0,1,1,1,1,1,1,0,1,0,1,1,0,1],\n        [1,0,0,0,0,1,0,0,0,1,1,0,0,0,1,0,0,0,0,1],\n        [1,1,1,1,0,1,1,1,0,1,1,0,1,1,1,0,1,1,1,1],\n        [1,1,1,1,0,1,2,2,2,2,2,2,2,2,1,0,1,1,1,1],\n        [1,1,1,1,0,1,2,1,1,1,1,1,1,2,1,0,1,1,1,1],\n        [2,2,7,2,0,2,2,1,1,1,1,1,1,2,2,0,2,2,2,2],\n        [1,1,1,1,0,1,2,1,1,1,1,1,1,2,1,0,1,1,1,1],\n        [1,1,1,1,0,1,2,2,2,2,2,2,2,2,1,0,1,1,1,1],\n        [1,1,1,1,0,1,1,1,0,1,1,0,1,1,1,0,1,1,1,1],\n        [1,0,0,0,0,1,0,0,0,1,1,0,0,0,1,0,0,0,0,1],\n        [1,0,1,1,0,1,0,1,1,1,1,1,1,0,1,0,1,1,0,1],\n        [1,0,0,0,6,0,0,0,0,0,0,0,0,0,0,5,0,0,0,1],\n        [1,0,1,1,0,1,1,1,0,1,1,0,1,1,1,0,1,1,0,1],\n        [1,0,1,1,0,1,1,1,0,1,1,0,1,1,1,0,1,1,0,1],\n        [1,0,1,1,0,1,1,1,0,1,1,0,1,1,1,0,1,1,0,1],\n        [1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1],\n        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\n    ];\n\n    // this.tiles = [        \n    //     [9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9],\n    //     [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\n    //     [1,2,2,2,4,2,2,2,2,2,2,2,2,2,2,3,2,2,2,1],\n    //     [1,2,1,1,2,1,2,1,1,1,1,1,1,2,1,2,1,1,2,1],\n    //     [1,2,2,2,2,1,2,2,2,1,1,2,2,2,1,2,2,2,2,1],\n    //     [1,1,1,1,2,1,1,1,2,1,1,2,1,1,1,2,1,1,1,1],\n    //     [1,1,1,1,2,1,2,2,2,2,2,2,2,2,1,2,1,1,1,1],\n    //     [1,1,1,1,2,1,2,1,1,1,1,1,1,2,1,2,1,1,1,1],\n    //     [2,2,7,2,2,2,2,1,1,1,1,1,1,2,2,2,2,2,2,2],\n    //     [1,1,1,1,2,1,2,1,1,1,1,1,1,2,1,2,1,1,1,1],\n    //     [1,1,1,1,2,1,2,2,2,2,2,2,2,2,1,2,1,1,1,1],\n    //     [1,1,1,1,2,1,1,1,2,1,1,2,1,1,1,2,1,1,1,1],\n    //     [1,2,2,2,2,1,2,2,2,1,1,2,2,2,1,2,2,2,2,1],\n    //     [1,2,1,1,2,1,2,1,1,1,1,1,1,2,1,2,1,1,2,1],\n    //     [1,2,2,2,6,2,2,2,2,2,2,2,2,2,2,5,2,2,2,1],\n    //     [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\n    // ];\n\n    this.ghostNode = null;\n}\n\nTileMap.prototype.setCanvas = function setCanvas(canvas) {\n    canvas.width = this.tiles[0].length * this.tileSize;\n    canvas.height = this.tiles.length * this.tileSize;\n}\n\nTileMap.prototype.draw = function(ctx, cakeman) {\n    for(let row=0; row<this.tiles.length; row++) {\n        for(let column=0; column<this.tiles[row].length; column++) {\n            let tile = this.tiles[row][column];\n            if(tile === 1) this.drawWall(ctx, column, row, this.tileSize);\n            else if(tile === 0) this.drawDot(ctx, column, row, this.tileSize);\n            else if(tile === 2){\n                this.drawEmpty(ctx, column, row, this.tileSize);\n            }\n        }\n    }\n\n    ctx.clearRect(0, 0, 480, 24);\n    ctx.font = '16px Comic Sans MS';\n    ctx.fillStyle = 'white';\n    ctx.fillText(`Score: ${cakeman.score}`, 30, 18);\n    ctx.fillText(`Countdown: ${cakeman.timeLeft}`, 360, 18);\n\n    // if(!cakeman.hasMoved) {\n    //     ctx.font = '16px Comic Sans MS';\n    //     ctx.fillStyle = 'white';\n    //     ctx.fillText('xxxxxxxxx');\n    // }\n\n    // if(isLost) {\n    //     console.log(isLost);\n    //     // this.gameOverScreen(ctx, cakeman);\n    //     ctx.font = '20px Comic Sans MS';\n    //     ctx.fillStyle = 'white';\n    //     ctx.fillText('Game Over', 185, 296);\n    //     ctx.fillText(`Score: ${cakeman.score}`, 196, 320);\n    // }\n\n    // if(isWin) {\n    //     this.winScreen(ctx, cakeman);\n    // }\n    // ctx.clearRect(180, 275, 110, 50)\n    // ctx.font = '20px Comic Sans MS';\n    // ctx.fillStyle = 'white';\n    // ctx.fillText('Game Over', 185, 296);\n    // ctx.fillText('Score: ', 196, 320)\n}\n\nTileMap.prototype.drawDot = function(ctx, column, row, size) {\n    ctx.drawImage(\n        this.dot, \n        column * this.tileSize,\n        row * this.tileSize,\n        size,\n        size\n    );\n};\n\nTileMap.prototype.drawWall = function(ctx, column, row, size) {\n    ctx.drawImage(\n        this.wall, \n        column * this.tileSize,\n        row * this.tileSize,\n        size,\n        size\n    );\n};\n\nTileMap.prototype.drawEmpty = function(ctx, column, row, size) {\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(column * this.tileSize, row*this.tileSize, size, size);\n}\n\nTileMap.prototype.getCakeman = function() {\n    for(let row=0; row<this.tiles.length; row++) {\n        for(let column=0; column<this.tiles[row].length; column++) {\n            let tile = this.tiles[row][column];\n            if(tile === 7) {\n                this.tiles[row][column] = 0;\n                let cakeMan = new Cakeman({\n                    position: [column*this.tileSize, row*this.tileSize],\n                    size: this.tileSize,\n                    tileMap: this\n                    }\n                );\n                return cakeMan;\n            }\n        }\n    }\n}\n\nTileMap.prototype.getGhost = function() {\n    for(let row=0; row<this.tiles.length; row++) {\n        for(let column=0; column<this.tiles[row].length; column++) {\n            let tile = this.tiles[row][column];\n            if(tile === 3) {\n                this.tiles[row][column] = 0;\n                let ghost = new Ghost({\n                    position: [column*this.tileSize, row*this.tileSize],\n                    size: this.tileSize,\n                    tileMap: this,\n                    id: 3\n                    }\n                );\n                this.ghostNode = new PolyTreeNode({position: [row, column]});\n                return ghost;    \n            } else if(tile === 4) {\n                this.tiles[row][column] = 0;\n                let ghost = new Ghost({\n                    position: [column*this.tileSize, row*this.tileSize],\n                    size: this.tileSize,\n                    tileMap: this,\n                    id: 4\n                    }\n                );\n            return ghost;\n            } else if(tile === 5) {\n                this.tiles[row][column] = 0;\n                let ghost = new Ghost({\n                    position: [column*this.tileSize, row*this.tileSize],\n                    size: this.tileSize,\n                    tileMap: this,\n                    id: 5\n                    }\n                );\n            return ghost;\n            } else if(tile === 6) {\n                this.tiles[row][column] = 0;\n                let ghost = new Ghost({\n                    position: [column*this.tileSize, row*this.tileSize],\n                    size: this.tileSize,\n                    tileMap: this,\n                    id: 6\n                    }\n                );\n            return ghost;\n            } \n        }\n    }\n}\n\nTileMap.prototype.didCollidedWithEnv = function(x, y, direction) {\n    if(typeof direction === null) return;\n    if(Number.isInteger(x/this.tileSize) && Number.isInteger(y/this.tileSize)) {\n        let column = 0;\n        let row = 0;\n        let nextColumn = 0;\n        let nextRow = 0;\n\n        switch(direction) {\n            case MovingDirection.right:\n                nextColumn = x + this.tileSize;\n                column = nextColumn / this.tileSize;\n                row = y / this.tileSize;\n                break;\n            case MovingDirection.left:\n                nextColumn = x - this.tileSize;\n                column = nextColumn / this.tileSize;\n                row = y / this.tileSize;\n                break;\n\n            case MovingDirection.up:\n                nextRow = y - this.tileSize;\n                row = nextRow / this.tileSize;\n                column = x / this.tileSize;\n                break;\n            case MovingDirection.down:\n                nextRow = y + this.tileSize;\n                row = nextRow / this.tileSize;\n                column = x / this.tileSize;\n                break;\n        }\n        const tile = this.tiles[row][column];\n        if(tile === 1) return true;\n    }\n    return false;\n}\n\nTileMap.prototype.removeDot = function removeDot(x, y) {\n    const row = y / this.tileSize;\n    const column = x / this.tileSize;\n\n    if(Number.isInteger(row) && Number.isInteger(column)) {\n        if(this.tiles[row][column] === 0) {\n            this.tiles[row][column] = 2;\n            return true;\n        }\n    }\n    return false; \n}\n\nTileMap.prototype.buildTree = function buildTree(ghost, cakeman) {\n    let i=0;\n    let ghostX = Math.floor(ghost.x/24);\n    let ghostY = Math.floor(ghost.y/24);\n    let inputGhostNode = new PolyTreeNode({position: [ghostX, ghostY]});\n    let cakemanX = Math.floor(cakeman.x/24);\n    let cakemanY = Math.floor(cakeman.y/24);\n\n    let queue = []\n    queue.push(inputGhostNode);\n\n    let isFound = false;\n    let visitedNodes = [];\n    while(queue.length && !isFound) {\n\n        let currentNode = queue.shift();\n\n        let x = currentNode.x;\n        let y = currentNode.y;\n        \n        if(this.tiles[x+1][y] !== 1 && this.tiles[x+1] !== undefined) {\n            var child = new PolyTreeNode({position: [x+1, y]});\n            if(!visitedNodes.includes(child)) {\n                queue.push(child);\n                visitedNodes.push(child);\n                currentNode.addChild(child);\n                child.assignParent(currentNode);\n                if((x+1) === cakemanX && y === cakemanY) {\n                    isFound = true;\n                    break;\n                }\n            }\n            // console.log(visitedNodes);\n            // return;\n        }\n        if(this.tiles[x][y+1] !== 1 && this.tiles[x][y+1] !== undefined) {\n            var child = new PolyTreeNode({position: [x, y+1]});\n            if(!visitedNodes.includes(child)) {\n                queue.push(child);\n                visitedNodes.push(child);\n                currentNode.addChild(child);\n                child.assignParent(currentNode);\n                if((x) === cakemanX && (y+1) === cakemanY) {\n                    isFound = true;\n                    break;\n                }\n            }\n        }if (this.tiles[x-1][y] !== 1 && this.tiles[x-1] !== undefined) {\n            var child = new PolyTreeNode({position: [x-1, y]});\n            if(!visitedNodes.includes(child)) {\n                queue.push(child);\n                visitedNodes.push(child);\n                currentNode.addChild(child);\n                child.assignParent(currentNode);\n                if((x-1) === cakemanX && y === cakemanY) {\n                    isFound = true;\n                    break;\n                }\n            }\n        }\n        if (this.tiles[x][y-1] !== 1 && this.tiles[x][y-1] !== undefined) {\n            var child = new PolyTreeNode({position: [x, y-1]});\n            if(!visitedNodes.includes(child)) {\n                queue.push(child);\n                visitedNodes.push(child);\n                currentNode.addChild(child);\n                child.assignParent(currentNode);\n                if((x) === cakemanX && (y-1) === cakemanY) {\n                    isFound = true;\n                    break;\n                }\n            }\n        }\n        i+=1\n        if(i === 100) {\n            // console.log(queue);\n            return 777;\n        }\n    }\n    let cakemanNode = visitedNodes[visitedNodes.length-1];\n    let backToGhostArr = [cakemanNode];\n    let node = cakemanNode;\n    while(node.parent !== inputGhostNode) {\n        backToGhostArr.push(node);\n        node = node.parent;\n    }\n    let nextMoveNode = backToGhostArr[backToGhostArr.length-1];\n    if(nextMoveNode.x === inputGhostNode.x) {\n        if(nextMoveNode.y >= inputGhostNode.y) {\n            return MovingDirection.down;\n        } else return MovingDirection.up;\n    }\n\n    if(nextMoveNode.y === inputGhostNode.y) {\n        if(nextMoveNode.x >= inputGhostNode.x) {\n            return MovingDirection.right;\n        } else return MovingDirection.left;\n    }\n}\n\nTileMap.prototype.gameOverScreen = function(ctx, cakeman) {\n    // ctx.clearRect(180, 275, 110, 50);\n    ctx.font = '20px Comic Sans MS';\n    ctx.fillStyle = 'white';\n    ctx.fillText('Game Over', 185, 296);\n    ctx.fillText(`Score: ${cakeman.score}`, 196, 320);\n    // return true;\n}\n\nTileMap.prototype.winScreen = function(ctx, cakeman) {\n    // ctx.clearRect(180, 275, 110, 50);\n    ctx.font = '20px Comic Sans MS';\n    ctx.fillStyle = 'white';\n    ctx.fillText('You win!', 185, 296);\n    ctx.fillText(`Score: ${cakeman.score}`, 196, 320);\n    // return true;\n}\n\n\nmodule.exports = TileMap;\n\n","const MovingDirection = require(\"./movingDirections.js\");\n\nfunction Cakeman(options) { \n    this.x = options.position[0];\n    this.y = options.position[1];\n    this.tileSize = options.size;\n    this.velocity = 2;\n    this.tileMap = options.tileMap;\n\n    this.currentMovingDirection = null;\n    this.requestedMovingDirection = null;\n\n    this.animateTimer = null;\n    this.animateDefault = 10;\n\n    this.rotation = {\n        right: 0,\n        down: 1,\n        left: 2,\n        up: 3\n    }\n    this.cakemanRotation = this.rotation.right;\n    this.dotsLeft = 0\n    this.hasMoved = false;\n\n    this.score = 0;\n    this.timeLeft = 120;\n\n    document.addEventListener(\"keydown\", this.keydown.bind(this));\n    \n    this.loadCakemanImages();\n}\n\nCakeman.prototype.draw = function(ctx) {\n    this.move();\n    this.animate();\n    this.removeDot();\n\n    // Rather than using multiple image, only one image was used for rotation. \n    // https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Transformations\n    let size = this.tileSize / 2;\n    ctx.save();\n    ctx.translate(this.x + size, this.y + size);\n    ctx.rotate((this.cakemanRotation * 90 * Math.PI) / 180);\n    ctx.drawImage(\n        this.cakemanImages[this.cakemanImageIndex],\n        -size,\n        -size,\n        this.tileSize,\n        this.tileSize\n    );\n    ctx.restore();\n\n};\n\nCakeman.prototype.timer = function timer() {\n    let countdown = setInterval((ele) => {\n        if(this.timeLeft < 0) clearInterval(countdown);\n            this.timeLeft -=1;\n        }, 1000\n    )\n}\n\nCakeman.prototype.move = function(){\n    if(this.currentMovingDirection !== this.requestedMovingDirection) {\n        if((this.x % this.tileSize === 0) && (this.y % this.tileSize === 0)) {\n            if(!this.tileMap.didCollidedWithEnv(\n                this.x,\n                this.y,\n                this.requestedMovingDirection\n            )) this.currentMovingDirection = this.requestedMovingDirection;\n        }\n    }\n\n    if(this.tileMap.didCollidedWithEnv(this.x, this.y, this.currentMovingDirection)) {\n        this.animateTimer = null;\n        this.cakemanImageIndex = 0;\n        return;\n    } else if(this.currentMovingDirection && !this.animateTimer) {\n        this.animateTimer = this.animateDefault;\n    }\n    \n    switch(this.currentMovingDirection) {\n        case MovingDirection.up:\n        this.y -= this.velocity;\n        this.cakemanRotation = this.rotation.up;\n        break;\n        \n        case MovingDirection.down:\n        this.y += this.velocity;\n        this.cakemanRotation = this.rotation.down;\n        break; \n        \n        case MovingDirection.left:\n        this.x -= this.velocity;\n        if(this.x < 12) this.x = 23 * this.tileMap.tiles[0].length;\n        this.cakemanRotation = this.rotation.left;\n        break; \n\n        case MovingDirection.right:\n        this.x += this.velocity;\n        if(this.x >= this.tileMap.tiles[0].length * 23) this.x = 0;\n        this.cakemanRotation = this.rotation.right;\n        break; \n    }\n};\n\nCakeman.prototype.loadCakemanImages = function() {\n    const cakemanImg1 = new Image();\n    cakemanImg1.src = \"./images/cakemanClosed.png\";\n\n    const cakemanImg2 = new Image();\n    cakemanImg2.src = \"./images/cakemanHalfOpen.png\";\n\n    const cakemanImg3 = new Image();\n    cakemanImg3.src = \"./images/cakemanFullOpen.png\";\n\n    const cakemanImg4 = new Image();\n    cakemanImg4.src = \"./images/cakemanHalfOpen.png\";\n\n    this.cakemanImages = [\n        cakemanImg1,\n        cakemanImg2,\n        cakemanImg3,\n        cakemanImg4\n    ];\n\n    this.cakemanImageIndex = 0;\n};\n\nCakeman.prototype.keydown = function (event) {\n    const arr = [38, 40, 37, 39];\n\n    // if(event.keyCode === 32 && !this.hasMoved) this.timer();\n    if(arr.includes(event.keyCode) && !this.hasMoved) this.timer();\n\n    if(arr.includes(event.keyCode)) {\n        this.hasMoved = true;\n        // this.timer();\n    }\n\n    // up key\n    if(event.keyCode === 38) {\n        if(this.currentMovingDirection === MovingDirection.down) {\n            this.currentMovingDirection = MovingDirection.up;\n        }\n        this.requestedMovingDirection = MovingDirection.up;\n    }\n    // down\n    if(event.keyCode === 40) {\n        if(this.currentMovingDirection === MovingDirection.up) {\n            this.currentMovingDirection = MovingDirection.down;\n        }\n        this.requestedMovingDirection = MovingDirection.down;\n    }\n    // 37 left\n    if(event.keyCode === 37) {\n        if(this.currentMovingDirection === MovingDirection.right) {\n            this.currentMovingDirection = MovingDirection.left;\n        }\n        this.requestedMovingDirection = MovingDirection.left;\n    }\n    // 39 right\n    if(event.keyCode === 39) {\n        if(this.currentMovingDirection === MovingDirection.left) {\n            this.currentMovingDirection = MovingDirection.right;\n        }\n        this.requestedMovingDirection = MovingDirection.right;\n    }\n};\n\nCakeman.prototype.animate = function animate() {\n    if(!this.animateTimer) {\n        return;\n    }\n    this.animateTimer -=1;\n    if(this.animateTimer === 0) {\n        this.animateTimer = this.animateDefault;\n        this.cakemanImageIndex += 1;\n        if(this.cakemanImageIndex === this.cakemanImages.length) {\n            this.cakemanImageIndex = 0;\n        }\n    }\n};\n\nCakeman.prototype.removeDot = function removeDot() {\n    if(this.tileMap.removeDot(this.x, this.y)) {\n        this.score += 1;\n    }\n}\n\nmodule.exports = Cakeman;\n\n\n","const TileMap = require(\"./TileMap\");\nconst Cakeman = require(\"./cakeman.js\");\n\nfunction Game(canvas) {\n    this.canvas = canvas;\n    this.ctx = this.canvas.getContext(\"2d\");\n    this.tileSize = 24;\n    this.velocity = 2;    \n};\n\nGame.prototype.setCanvasSize = function setCanvasSize() {\n    this.tileMap.setCanvas(this.canvas);\n}\n\nGame.prototype.start = function() {\n    this.tileMap = new TileMap(this.tileSize);\n    this.cakeman = this.tileMap.getCakeman();\n    this.ghost = this.tileMap.getGhost();\n    this.blueGhost = this.tileMap.getGhost();\n    this.purpleGhost = this.tileMap.getGhost();\n    this.pinkGhost = this.tileMap.getGhost();\n    this.setCanvasSize(); \n\n    this.myInterval = setInterval(this.gameIter.bind(this), 15);\n}\n\nGame.prototype.stop = function() {\n    clearInterval(this.myInterval);\n}\n\nGame.prototype.gameIter = function() {\n    \n    if(!this.isLost()) {\n        this.tileMap.draw(this.ctx, this.cakeman);\n        this.cakeman.draw(this.ctx);\n        this.ghost.draw(this.ctx, this.pause(), this.cakeman);\n        this.blueGhost.draw(this.ctx, this.pause(), this.cakeman);\n        this.purpleGhost.draw(this.ctx, this.pause(), this.cakeman);\n        this.pinkGhost.draw(this.ctx, this.pause(), this.cakeman);\n    }\n    // this.isWin();\n};\n\nGame.prototype.pause = function pause() {\n    return !this.cakeman.hasMoved;\n}\n\nGame.prototype.isLost = function isLost() {\n    // 2d Detection Collision on Mozilla\n    // https://developer.mozilla.org/en-US/docs/Games/Techniques/2D_collision_detection\n    \n    if(\n    (this.cakeman.x < this.ghost.x + 16 &&\n    this.cakeman.x + 16 > this.ghost.x &&\n    this.cakeman.y < this.ghost.y + 16 &&\n    16 + this.cakeman.y > this.ghost.y) ||\n\n    (this.cakeman.x < this.blueGhost.x + 16 &&\n    this.cakeman.x + 16 > this.blueGhost.x &&\n    this.cakeman.y < this.blueGhost.y + 16 &&\n    16 + this.cakeman.y > this.blueGhost.y)  ||\n    \n    (this.cakeman.x < this.purpleGhost.x + 16 &&\n    this.cakeman.x + 16 > this.purpleGhost.x &&\n    this.cakeman.y < this.purpleGhost.y + 16 &&\n    16 + this.cakeman.y > this.purpleGhost.y)  ||\n\n    (this.cakeman.x < this.pinkGhost.x + 16 &&\n    this.cakeman.x + 16 > this.pinkGhost.x &&\n    this.cakeman.y < this.pinkGhost.y + 16 &&\n    16 + this.cakeman.y > this.pinkGhost.y)  ||\n\n    this.cakeman.timeLeft <= -1\n\n    ) {\n        this.tileMap.gameOverScreen(this.ctx, this.cakeman);\n        setTimeout(() => location.reload(), 7000);\n        return true;\n    } else if(this.isWin()) {\n        this.tileMap.winScreen(this.ctx, this.cakeman);\n        \n    }\n    return false;\n}\n\nGame.prototype.isWin = function isWin() {\n    let remainingDots = this.tileMap.tiles.flat().filter(v => v === 0).length;\n    if(remainingDots === 0) {\n        // console.log(remainingDots);\n        // this.tileMap.winScreen(this.ctx, this.cakeman);\n        // setTimeout(() => location.reload(), 7000);\n        return true;     \n    }\n    return false;\n}\n\nmodule.exports = Game;","const MovingDirection = require(\"./movingDirections.js\");\nconst Util = require(\"./utils.js\");\n\nfunction getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nfunction Ghost(options) { \n    this.x = options.position[0];\n    this.y = options.position[1];\n    this.tileSize = options.size;\n    this.velocity = 2;\n    this.tileMap = options.tileMap;\n    this.id = options.id\n\n    this.movingDirection = getRandomInt(1, 4); // initial random is fine\n\n    this.loadGhostImage();\n}\n\nGhost.prototype.draw = function draw(ctx, pause, cakeman) {\n    if(!pause) {\n        this.changeDirection(cakeman);\n        this.move(cakeman);\n    }\n    ctx.drawImage(\n        this.ghostImage,\n        this.x,\n        this.y,\n        this.tileSize,\n        this.tileSize\n    );\n};\n\nGhost.prototype.mockMove = function mockMove(suggestedDirection) {\n    let x = null;\n    let y = null;\n    if(!this.tileMap.didCollidedWithEnv(this.x, this.y, suggestedDirection)) {\n        if(suggestedDirection === MovingDirection.up) {\n            y = this.y - this.velocity;\n            return [this.x, y]; \n        } else if(suggestedDirection === MovingDirection.down) {\n            y = this.y + this.velocity;\n            return [this.x, y];\n        } else if(suggestedDirection === MovingDirection.right) {\n            x = this.x + this.velocity;\n            return [x, this.y];\n        } else {\n            x = this.x - this.velocity;\n            return [x, this.y];\n        }\n    }\n}\n\nGhost.prototype.move = function move(cakeman) {\n    if(!this.tileMap.didCollidedWithEnv(this.x, this.y, this.movingDirection)) {\n        switch(this.movingDirection) {\n            case MovingDirection.up:\n            this.y -= this.velocity;\n            break;\n            \n            case MovingDirection.down:\n            this.y += this.velocity;\n            break; \n            \n            case MovingDirection.left:\n            this.x -= this.velocity;\n            if(this.x < 12) this.x = 23 * this.tileMap.tiles[0].length;\n            break; \n    \n            case MovingDirection.right:\n            this.x += this.velocity;\n            if(this.x >= this.tileMap.tiles[0].length * 23) this.x=0;\n            break; \n        }\n    } \n}\n\nGhost.prototype.changeDirection = function changeDirection(cakeman) {\n    let newMoveDirection = null;\n    let newMoveDirectionName = null;\n    let possibleDirections = [];\n\n    if((this.x % this.tileSize === 0) && (this.y % this.tileSize === 0)) {\n        for(let i=1; i<5; i++) {\n            if(!this.tileMap.didCollidedWithEnv(this.x, this.y, i)){\n                let distance = Util.dist(this.mockMove(i), [cakeman.x, cakeman.y]);\n                possibleDirections.push(i);\n            }\n        }\n        \n        possibleDirections = possibleDirections.filter(item => item !== 5-this.movingDirection);\n\n        if(getRandomInt(1,2,3,4)<3) {\n            newMoveDirection = possibleDirections[Math.floor(Math.random()*possibleDirections.length)];\n        } else newMoveDirection = Util.findDirectionForGhost(this, cakeman, this.tileMap);\n        \n        this.movingDirection = newMoveDirection;\n\n        // if((this.x % this.tileSize === 0) && (this.y % this.tileSize === 0) && this.id === 3) {\n        //     let nextmoveDirection = this.tileMap.buildTree(this, cakeman);\n        //     // console.log(nextmoveDirection);\n        //     if(nextmoveDirection !== 777) this.movingDirection = nextmoveDirection;\n        // }\n    }\n}\n\nGhost.prototype.loadGhostImage = function draw() {\n    this.ghostImage = new Image();\n    if(this.id === 3) {\n        this.ghostImage.src = (\"./images/redGhost.png\");\n    } else if(this.id === 4) {\n        this.ghostImage.src = (\"./images/blueGhost.png\");\n    } else if(this.id === 5) {\n        this.ghostImage.src = (\"./images/purpleGhost.png\");\n    } else if(this.id === 6) {\n        this.ghostImage.src = (\"./images/pinkGhost.png\");\n    }\n}\nmodule.exports = Ghost;","const MovingDirection = {\n    up: 4, // avoid using 0\n    down: 1,\n    left: 2,\n    right: 3,\n  };\n  \nmodule.exports = MovingDirection;","const TileMap = require(\"./TileMap\");\n\nfunction PolyTreeNode (options) {\n    this.x = options.position[0] ;\n    this.y = options.position[1] ;\n    this.parent = null;\n    this.children = [];\n}\n\nPolyTreeNode.prototype.addChild = function(child)  {\n    this.children.push(child);\n}\n\nPolyTreeNode.prototype.assignParent = function(parent) {\n    this.parent = parent;\n}\n\nmodule.exports = PolyTreeNode;","const MovingDirection = require(\"./movingDirections.js\");\n\nconst Util = {\n    dist(pos1, pos2) {\n        return Math.sqrt(\n          Math.pow(pos1[0] - pos2[0], 2) + Math.pow(pos1[1] - pos2[1], 2)\n        );\n    },    \n    findDirectionForGhost(ghost, cakeman, tileMap) {\n        let absX = Math.abs(ghost.x - cakeman.x);\n        let absY = Math.abs(ghost.y - cakeman.y);\n        let currentD = ghost.MovingDirection;\n\n        if(absX >= absY) {\n            // should be left or right\n            if(ghost.x >= cakeman.x) {\n                // should be left\n                if(!tileMap.didCollidedWithEnv(ghost.x, ghost.y, MovingDirection.left) && MovingDirection.left !== 5 - currentD) return MovingDirection.left;\n                else if(!tileMap.didCollidedWithEnv(ghost.x, ghost.y, MovingDirection.up) && MovingDirection.up !== 5 - currentD) return MovingDirection.up;\n                else return MovingDirection.down;\n            } else {\n                // should be right\n                if(!tileMap.didCollidedWithEnv(ghost.x, ghost.y, MovingDirection.right) && MovingDirection.right !== 5 - currentD) return MovingDirection.right;\n                else if(!tileMap.didCollidedWithEnv(ghost.x, ghost.y, MovingDirection.up) && MovingDirection.up !== 5 - currentD) return MovingDirection.up;\n                else return MovingDirection.down;\n            }\n        }else {\n            // should be up or down\n            if(ghost.y >= cakeman.x) {\n                // should be up\n                if(!tileMap.didCollidedWithEnv(ghost.x, ghost.y, MovingDirection.up) && MovingDirection.up !== 5 - currentD) return MovingDirection.up;\n                else if(!tileMap.didCollidedWithEnv(ghost.x, ghost.y, MovingDirection.right) && MovingDirection.right !== 5 - currentD) return MovingDirection.right;\n                else return MovingDirection.left;\n            } else {\n                // should be down\n                if(!tileMap.didCollidedWithEnv(ghost.x, ghost.y, MovingDirection.down) && MovingDirection.down !== 5 - currentD) return MovingDirection.down;\n                else if(!tileMap.didCollidedWithEnv(ghost.x, ghost.y, MovingDirection.right) && MovingDirection.right !== 5 - currentD) return MovingDirection.right;\n                else return MovingDirection.left;\n            }\n        }            \n    }\n}\n\nmodule.exports = Util;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const Game = require(\"./scripts/game.js\");\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    const canvasEl = document.getElementById('game-canvas');\n    const game = new Game(canvasEl);\n    game.start();\n});\n"],"names":["Cakeman","require","Ghost","PolyTreeNode","MovingDirection","TileMap","tileSize","this","cakeman","Image","src","wall","dot","tiles","ghostNode","prototype","setCanvas","canvas","width","length","height","draw","ctx","row","column","tile","drawWall","drawDot","drawEmpty","clearRect","font","fillStyle","fillText","score","timeLeft","size","drawImage","fillRect","getCakeman","position","tileMap","getGhost","ghost","id","didCollidedWithEnv","x","y","direction","Number","isInteger","nextColumn","nextRow","right","left","up","down","removeDot","buildTree","i","ghostX","Math","floor","ghostY","inputGhostNode","cakemanX","cakemanY","queue","push","isFound","visitedNodes","currentNode","shift","undefined","child","includes","addChild","assignParent","cakemanNode","backToGhostArr","node","parent","nextMoveNode","gameOverScreen","winScreen","module","exports","options","velocity","currentMovingDirection","requestedMovingDirection","animateTimer","animateDefault","rotation","cakemanRotation","dotsLeft","hasMoved","document","addEventListener","keydown","bind","loadCakemanImages","move","animate","save","translate","rotate","PI","cakemanImages","cakemanImageIndex","restore","timer","countdown","setInterval","ele","clearInterval","cakemanImg1","cakemanImg2","cakemanImg3","cakemanImg4","event","arr","keyCode","Game","getContext","setCanvasSize","start","blueGhost","purpleGhost","pinkGhost","myInterval","gameIter","stop","isLost","pause","setTimeout","location","reload","isWin","flat","filter","v","Util","getRandomInt","min","max","ceil","random","movingDirection","loadGhostImage","changeDirection","ghostImage","mockMove","suggestedDirection","newMoveDirection","possibleDirections","dist","item","findDirectionForGhost","children","pos1","pos2","sqrt","pow","absX","abs","absY","currentD","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","canvasEl","getElementById"],"sourceRoot":""}