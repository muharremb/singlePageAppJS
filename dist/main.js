/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval("const Game = __webpack_require__(/*! ./scripts/game.js */ \"./src/scripts/game.js\");\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const canvasEl = document.getElementById('game-canvas');\n  const game = new Game(canvasEl);\n  game.start();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsSUFBSSxHQUFHQyxtQkFBTyxDQUFDLGdEQUFELENBQXBCOztBQUVBQyxRQUFRLENBQUNDLGdCQUFULENBQTBCLGtCQUExQixFQUE4QyxNQUFNO0VBQ2hELE1BQU1DLFFBQVEsR0FBR0YsUUFBUSxDQUFDRyxjQUFULENBQXdCLGFBQXhCLENBQWpCO0VBQ0EsTUFBTUMsSUFBSSxHQUFHLElBQUlOLElBQUosQ0FBU0ksUUFBVCxDQUFiO0VBQ0FFLElBQUksQ0FBQ0MsS0FBTDtBQUVILENBTEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYWtlLW1hbi1uZWFyLXlvdS8uL3NyYy9pbmRleC5qcz9iNjM1Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEdhbWUgPSByZXF1aXJlKFwiLi9zY3JpcHRzL2dhbWUuanNcIik7XG5cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCAoKSA9PiB7XG4gICAgY29uc3QgY2FudmFzRWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZ2FtZS1jYW52YXMnKTtcbiAgICBjb25zdCBnYW1lID0gbmV3IEdhbWUoY2FudmFzRWwpO1xuICAgIGdhbWUuc3RhcnQoKTsgICAgXG4gICAgXG59KTtcbiJdLCJuYW1lcyI6WyJHYW1lIiwicmVxdWlyZSIsImRvY3VtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsImNhbnZhc0VsIiwiZ2V0RWxlbWVudEJ5SWQiLCJnYW1lIiwic3RhcnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/TileMap.js":
/*!********************************!*\
  !*** ./src/scripts/TileMap.js ***!
  \********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("const Cakeman = __webpack_require__(/*! ./cakeman.js */ \"./src/scripts/cakeman.js\");\n\nconst Ghost = __webpack_require__(/*! ./ghost.js */ \"./src/scripts/ghost.js\");\n\nconst MovingDirection = __webpack_require__(/*! ./movingDirections.js */ \"./src/scripts/movingDirections.js\");\n\nfunction TileMap(tileSize) {\n  // I used MDN Web Documents Square TileMaps Statis Implementation. \n  // https://developer.mozilla.org/en-US/docs/Games/Techniques/Tilemaps/Square_tilemaps_implementation:_Static_maps\n  this.tileSize = tileSize;\n  this.cakeman = new Image();\n  this.cakeman.src = \"../images/cakemanClosed.png\";\n  this.wall = new Image();\n  this.wall.src = \"../images/wall.png\";\n  this.dot = new Image();\n  this.dot.src = \"../images/dot.png\"; // 1 wall\n  // 0 dots\n  // 2 empty black\n  // 7 cakeman\n  // 3 ghost red\n\n  this.tiles = [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]];\n}\n\nTileMap.prototype.setCanvas = function setCanvas(canvas) {\n  canvas.width = this.tiles[0].length * this.tileSize;\n  canvas.height = this.tiles.length * this.tileSize;\n};\n\nTileMap.prototype.draw = function (ctx) {\n  for (let row = 0; row < this.tiles.length; row++) {\n    for (let column = 0; column < this.tiles[row].length; column++) {\n      let tile = this.tiles[row][column];\n      if (tile === 1) this.drawWall(ctx, column, row, this.tileSize);else if (tile === 0) this.drawDot(ctx, column, row, this.tileSize);else {\n        this.drawEmpty(ctx, column, row, this.tileSize);\n      }\n      ctx.strokeStyle = \"yellow\";\n      ctx.strokeRect(column * this.tileSize, row * this.tileSize, this.tileSize, this.tileSize);\n    }\n  }\n};\n\nTileMap.prototype.drawDot = function (ctx, column, row, size) {\n  ctx.drawImage(this.dot, column * this.tileSize, row * this.tileSize, size, size);\n};\n\nTileMap.prototype.drawWall = function (ctx, column, row, size) {\n  ctx.drawImage(this.wall, column * this.tileSize, row * this.tileSize, size, size);\n};\n\nTileMap.prototype.drawEmpty = function (ctx, column, row, size) {\n  ctx.fillStyle = \"black\";\n  ctx.fillRect(column * this.tileSize, row * this.tileSize, size, size);\n};\n\nTileMap.prototype.getCakeman = function () {\n  for (let row = 0; row < this.tiles.length; row++) {\n    for (let column = 0; column < this.tiles[row].length; column++) {\n      let tile = this.tiles[row][column];\n\n      if (tile === 7) {\n        this.tiles[row][column] = 0;\n        let cakeMan = new Cakeman({\n          position: [column * this.tileSize, row * this.tileSize],\n          size: this.tileSize,\n          tileMap: this\n        });\n        return cakeMan;\n      }\n    }\n  }\n};\n\nTileMap.prototype.getGhost = function () {\n  for (let row = 0; row < this.tiles.length; row++) {\n    for (let column = 0; column < this.tiles[row].length; column++) {\n      let tile = this.tiles[row][column];\n\n      if (tile === 3) {\n        this.tiles[row][column] = 0;\n        let ghost = new Ghost({\n          position: [column * this.tileSize, row * this.tileSize],\n          size: this.tileSize,\n          tileMap: this\n        });\n        return ghost;\n      }\n    }\n  }\n};\n\nTileMap.prototype.didCollidedWithEnv = function (x, y, direction) {\n  if (typeof direction === null) return;\n\n  if (Number.isInteger(x / this.tileSize) && Number.isInteger(y / this.tileSize)) {\n    let column = 0;\n    let row = 0;\n    let nextColumn = 0;\n    let nextRow = 0;\n\n    switch (direction) {\n      case MovingDirection.right:\n        nextColumn = x + this.tileSize;\n        column = nextColumn / this.tileSize;\n        row = y / this.tileSize;\n        break;\n\n      case MovingDirection.left:\n        nextColumn = x - this.tileSize;\n        column = nextColumn / this.tileSize;\n        row = y / this.tileSize;\n        break;\n\n      case MovingDirection.up:\n        nextRow = y - this.tileSize;\n        row = nextRow / this.tileSize;\n        column = x / this.tileSize;\n        break;\n\n      case MovingDirection.down:\n        nextRow = y + this.tileSize;\n        row = nextRow / this.tileSize;\n        column = x / this.tileSize;\n        break;\n    }\n\n    const tile = this.tiles[row][column];\n    if (tile === 1) return true;\n  }\n\n  return false;\n};\n\nTileMap.prototype.removeDot = function removeDot(x, y) {\n  const row = y / this.tileSize;\n  const column = x / this.tileSize;\n\n  if (Number.isInteger(row) && Number.isInteger(column)) {\n    if (this.tiles[row][column] === 0) {\n      this.tiles[row][column] = 2;\n      return true;\n    }\n  }\n\n  return false;\n};\n\nmodule.exports = TileMap;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/TileMap.js\n");

/***/ }),

/***/ "./src/scripts/cakeman.js":
/*!********************************!*\
  !*** ./src/scripts/cakeman.js ***!
  \********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("const MovingDirection = __webpack_require__(/*! ./movingDirections.js */ \"./src/scripts/movingDirections.js\");\n\nfunction Cakeman(options) {\n  this.x = options.position[0];\n  this.y = options.position[1];\n  this.tileSize = options.size;\n  this.velocity = 2;\n  this.tileMap = options.tileMap;\n  this.currentMovingDirection = null;\n  this.requestedMovingDirection = null;\n  this.animateTimer = null;\n  this.animateDefault = 10;\n  this.rotation = {\n    right: 0,\n    down: 1,\n    left: 2,\n    up: 3\n  };\n  this.cakemanRotation = this.rotation.right;\n  this.hasMoved = false;\n  document.addEventListener(\"keydown\", this.keydown.bind(this));\n  this.loadCakemanImages();\n}\n\nCakeman.prototype.draw = function (ctx) {\n  this.move();\n  this.animate();\n  this.removeDot(); // I used Tutorial on how to rotate a single image\n  // https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Transformations\n\n  let size = this.tileSize / 2;\n  ctx.save();\n  ctx.translate(this.x + size, this.y + size);\n  ctx.rotate(this.cakemanRotation * 90 * Math.PI / 180);\n  ctx.drawImage(this.cakemanImages[this.cakemanImageIndex], -size, -size, this.tileSize, this.tileSize);\n  ctx.restore(); // ctx.drawImage(\n  //     this.cakemanImages[this.cakemanImageIndex],\n  //     this.x,\n  //     this.y,\n  //     this.tileSize,\n  //     this.tileSize\n  // )\n};\n\nCakeman.prototype.move = function () {\n  if (this.currentMovingDirection !== this.requestedMovingDirection) {\n    if (Number.isInteger(this.x / this.tileSize) && Number.isInteger(this.y / this.tileSize)) {\n      if (!this.tileMap.didCollidedWithEnv(this.x, this.y, this.requestedMovingDirection)) this.currentMovingDirection = this.requestedMovingDirection;\n    }\n  }\n\n  if (this.tileMap.didCollidedWithEnv(this.x, this.y, this.currentMovingDirection)) {\n    this.animateTimer = null;\n    this.cakemanImageIndex = 0;\n    return;\n  } else if (this.currentMovingDirection && !this.animateTimer) {\n    this.animateTimer = this.animateDefault;\n  }\n\n  switch (this.currentMovingDirection) {\n    case MovingDirection.up:\n      this.y -= this.velocity;\n      this.cakemanRotation = this.rotation.up;\n      break;\n\n    case MovingDirection.down:\n      this.y += this.velocity;\n      this.cakemanRotation = this.rotation.down;\n      break;\n\n    case MovingDirection.left:\n      this.x -= this.velocity;\n      this.cakemanRotation = this.rotation.left;\n      break;\n\n    case MovingDirection.right:\n      this.x += this.velocity;\n      this.cakemanRotation = this.rotation.right;\n      break;\n  }\n};\n\nCakeman.prototype.loadCakemanImages = function () {\n  const cakemanImg1 = new Image();\n  cakemanImg1.src = \"../images/cakemanClosed.png\";\n  const cakemanImg2 = new Image();\n  cakemanImg2.src = \"../images/cakemanHalfOpen.png\";\n  const cakemanImg3 = new Image();\n  cakemanImg3.src = \"../images/cakemanFullOpen.png\";\n  const cakemanImg4 = new Image();\n  cakemanImg4.src = \"../images/cakemanHalfOpen.png\";\n  this.cakemanImages = [cakemanImg1, cakemanImg2, cakemanImg3, cakemanImg4];\n  this.cakemanImageIndex = 0;\n};\n\nCakeman.prototype.keydown = function (event) {\n  const arr = [38, 40, 37, 39];\n  if (arr.includes(event.keyCode)) this.hasMoved = true; // up key\n\n  if (event.keyCode === 38) {\n    if (this.currentMovingDirection === MovingDirection.down) {\n      this.currentMovingDirection = MovingDirection.up;\n    }\n\n    this.requestedMovingDirection = MovingDirection.up;\n  } // down\n\n\n  if (event.keyCode === 40) {\n    if (this.currentMovingDirection === MovingDirection.up) {\n      this.currentMovingDirection = MovingDirection.down;\n    }\n\n    this.requestedMovingDirection = MovingDirection.down;\n  } // 37 left\n\n\n  if (event.keyCode === 37) {\n    if (this.currentMovingDirection === MovingDirection.right) {\n      this.currentMovingDirection = MovingDirection.left;\n    }\n\n    this.requestedMovingDirection = MovingDirection.left;\n  } // 39 right\n\n\n  if (event.keyCode === 39) {\n    if (this.currentMovingDirection === MovingDirection.left) {\n      this.currentMovingDirection = MovingDirection.right;\n    }\n\n    this.requestedMovingDirection = MovingDirection.right;\n  }\n};\n\nCakeman.prototype.animate = function animate() {\n  if (!this.animateTimer) {\n    return;\n  }\n\n  this.animateTimer -= 1;\n\n  if (this.animateTimer === 0) {\n    this.animateTimer = this.animateDefault;\n    this.cakemanImageIndex += 1;\n\n    if (this.cakemanImageIndex === this.cakemanImages.length) {\n      this.cakemanImageIndex = 0;\n    }\n  }\n};\n\nCakeman.prototype.removeDot = function removeDot() {\n  if (this.tileMap.removeDot(this.x, this.y)) {}\n};\n\nmodule.exports = Cakeman;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/cakeman.js\n");

/***/ }),

/***/ "./src/scripts/game.js":
/*!*****************************!*\
  !*** ./src/scripts/game.js ***!
  \*****************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("const TileMap = __webpack_require__(/*! ./TileMap */ \"./src/scripts/TileMap.js\");\n\nconst Cakeman = __webpack_require__(/*! ./cakeman.js */ \"./src/scripts/cakeman.js\");\n\nfunction Game(canvas) {\n  this.canvas = canvas;\n  this.ctx = this.canvas.getContext(\"2d\");\n  this.tileSize = 32;\n  this.velocity = 2;\n  this.tileMap = new TileMap(this.tileSize);\n  this.cakeman = this.tileMap.getCakeman();\n  this.ghost = this.tileMap.getGhost();\n  this.setCanvasSize();\n}\n\n;\n\nGame.prototype.setCanvasSize = function setCanvasSize() {\n  this.tileMap.setCanvas(this.canvas);\n};\n\nGame.prototype.start = function () {\n  setInterval(this.gameIter.bind(this), 1000 / 50);\n};\n\nGame.prototype.gameIter = function () {\n  this.tileMap.draw(this.ctx);\n  this.cakeman.draw(this.ctx);\n  this.ghost.draw(this.ctx, this.pause());\n};\n\nGame.prototype.pause = function pause() {\n  return !this.cakeman.hasMoved;\n};\n\nmodule.exports = Game;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9nYW1lLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU8sR0FBR0MsbUJBQU8sQ0FBQywyQ0FBRCxDQUF2Qjs7QUFDQSxNQUFNQyxPQUFPLEdBQUdELG1CQUFPLENBQUMsOENBQUQsQ0FBdkI7O0FBRUEsU0FBU0UsSUFBVCxDQUFjQyxNQUFkLEVBQXNCO0VBQ2xCLEtBQUtBLE1BQUwsR0FBY0EsTUFBZDtFQUNBLEtBQUtDLEdBQUwsR0FBVyxLQUFLRCxNQUFMLENBQVlFLFVBQVosQ0FBdUIsSUFBdkIsQ0FBWDtFQUNBLEtBQUtDLFFBQUwsR0FBZ0IsRUFBaEI7RUFDQSxLQUFLQyxRQUFMLEdBQWdCLENBQWhCO0VBQ0EsS0FBS0MsT0FBTCxHQUFlLElBQUlULE9BQUosQ0FBWSxLQUFLTyxRQUFqQixDQUFmO0VBQ0EsS0FBS0csT0FBTCxHQUFlLEtBQUtELE9BQUwsQ0FBYUUsVUFBYixFQUFmO0VBQ0EsS0FBS0MsS0FBTCxHQUFhLEtBQUtILE9BQUwsQ0FBYUksUUFBYixFQUFiO0VBRUEsS0FBS0MsYUFBTDtBQUNIOztBQUFBOztBQUdEWCxJQUFJLENBQUNZLFNBQUwsQ0FBZUQsYUFBZixHQUErQixTQUFTQSxhQUFULEdBQXlCO0VBQ3BELEtBQUtMLE9BQUwsQ0FBYU8sU0FBYixDQUF1QixLQUFLWixNQUE1QjtBQUNILENBRkQ7O0FBSUFELElBQUksQ0FBQ1ksU0FBTCxDQUFlRSxLQUFmLEdBQXVCLFlBQVc7RUFDOUJDLFdBQVcsQ0FBQyxLQUFLQyxRQUFMLENBQWNDLElBQWQsQ0FBbUIsSUFBbkIsQ0FBRCxFQUEyQixPQUFLLEVBQWhDLENBQVg7QUFDSCxDQUZEOztBQUlBakIsSUFBSSxDQUFDWSxTQUFMLENBQWVJLFFBQWYsR0FBMEIsWUFBVztFQUNqQyxLQUFLVixPQUFMLENBQWFZLElBQWIsQ0FBa0IsS0FBS2hCLEdBQXZCO0VBQ0EsS0FBS0ssT0FBTCxDQUFhVyxJQUFiLENBQWtCLEtBQUtoQixHQUF2QjtFQUNBLEtBQUtPLEtBQUwsQ0FBV1MsSUFBWCxDQUFnQixLQUFLaEIsR0FBckIsRUFBMEIsS0FBS2lCLEtBQUwsRUFBMUI7QUFDSCxDQUpEOztBQU1BbkIsSUFBSSxDQUFDWSxTQUFMLENBQWVPLEtBQWYsR0FBdUIsU0FBU0EsS0FBVCxHQUFpQjtFQUNwQyxPQUFPLENBQUMsS0FBS1osT0FBTCxDQUFhYSxRQUFyQjtBQUNILENBRkQ7O0FBSUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnRCLElBQWpCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2FrZS1tYW4tbmVhci15b3UvLi9zcmMvc2NyaXB0cy9nYW1lLmpzP2NkYzAiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgVGlsZU1hcCA9IHJlcXVpcmUoXCIuL1RpbGVNYXBcIik7XG5jb25zdCBDYWtlbWFuID0gcmVxdWlyZShcIi4vY2FrZW1hbi5qc1wiKTtcblxuZnVuY3Rpb24gR2FtZShjYW52YXMpIHtcbiAgICB0aGlzLmNhbnZhcyA9IGNhbnZhcztcbiAgICB0aGlzLmN0eCA9IHRoaXMuY2FudmFzLmdldENvbnRleHQoXCIyZFwiKTtcbiAgICB0aGlzLnRpbGVTaXplID0gMzI7XG4gICAgdGhpcy52ZWxvY2l0eSA9IDI7XG4gICAgdGhpcy50aWxlTWFwID0gbmV3IFRpbGVNYXAodGhpcy50aWxlU2l6ZSk7XG4gICAgdGhpcy5jYWtlbWFuID0gdGhpcy50aWxlTWFwLmdldENha2VtYW4oKTtcbiAgICB0aGlzLmdob3N0ID0gdGhpcy50aWxlTWFwLmdldEdob3N0KCk7XG5cbiAgICB0aGlzLnNldENhbnZhc1NpemUoKTtcbn07XG5cblxuR2FtZS5wcm90b3R5cGUuc2V0Q2FudmFzU2l6ZSA9IGZ1bmN0aW9uIHNldENhbnZhc1NpemUoKSB7XG4gICAgdGhpcy50aWxlTWFwLnNldENhbnZhcyh0aGlzLmNhbnZhcyk7XG59XG5cbkdhbWUucHJvdG90eXBlLnN0YXJ0ID0gZnVuY3Rpb24oKSB7XG4gICAgc2V0SW50ZXJ2YWwodGhpcy5nYW1lSXRlci5iaW5kKHRoaXMpLCAxMDAwLzUwKTtcbn1cblxuR2FtZS5wcm90b3R5cGUuZ2FtZUl0ZXIgPSBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnRpbGVNYXAuZHJhdyh0aGlzLmN0eCk7XG4gICAgdGhpcy5jYWtlbWFuLmRyYXcodGhpcy5jdHgpO1xuICAgIHRoaXMuZ2hvc3QuZHJhdyh0aGlzLmN0eCwgdGhpcy5wYXVzZSgpKTtcbn07XG5cbkdhbWUucHJvdG90eXBlLnBhdXNlID0gZnVuY3Rpb24gcGF1c2UoKSB7XG4gICAgcmV0dXJuICF0aGlzLmNha2VtYW4uaGFzTW92ZWQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gR2FtZTsiXSwibmFtZXMiOlsiVGlsZU1hcCIsInJlcXVpcmUiLCJDYWtlbWFuIiwiR2FtZSIsImNhbnZhcyIsImN0eCIsImdldENvbnRleHQiLCJ0aWxlU2l6ZSIsInZlbG9jaXR5IiwidGlsZU1hcCIsImNha2VtYW4iLCJnZXRDYWtlbWFuIiwiZ2hvc3QiLCJnZXRHaG9zdCIsInNldENhbnZhc1NpemUiLCJwcm90b3R5cGUiLCJzZXRDYW52YXMiLCJzdGFydCIsInNldEludGVydmFsIiwiZ2FtZUl0ZXIiLCJiaW5kIiwiZHJhdyIsInBhdXNlIiwiaGFzTW92ZWQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/game.js\n");

/***/ }),

/***/ "./src/scripts/ghost.js":
/*!******************************!*\
  !*** ./src/scripts/ghost.js ***!
  \******************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("const MovingDirection = __webpack_require__(/*! ./movingDirections.js */ \"./src/scripts/movingDirections.js\");\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n;\n\nfunction Ghost(options) {\n  this.x = options.position[0];\n  this.y = options.position[1];\n  this.tileSize = options.size;\n  this.velocity = 2;\n  this.tileMap = options.tileMap;\n  this.movingDirection = getRandomInt(1, 4);\n  this.loadGhostImage();\n}\n\nGhost.prototype.draw = function draw(ctx, pause) {\n  if (!pause) {\n    this.move();\n    this.changeDirection();\n  } // if(this.tileMap.didCollidedWithEnv(this.x, this.y, this.movingDirection)) this.changeDirection();\n\n\n  ctx.drawImage(this.ghostImage, this.x, this.y, this.tileSize, this.tileSize);\n};\n\nGhost.prototype.move = function move() {\n  if (!this.tileMap.didCollidedWithEnv(this.x, this.y, this.movingDirection)) {\n    switch (this.movingDirection) {\n      case MovingDirection.up:\n        this.y -= this.velocity;\n        break;\n\n      case MovingDirection.down:\n        this.y += this.velocity;\n        break;\n\n      case MovingDirection.left:\n        this.x -= this.velocity;\n        break;\n\n      case MovingDirection.right:\n        this.x += this.velocity;\n        break;\n    }\n  }\n};\n\nGhost.prototype.changeDirection = function changeDirection() {\n  let newMoveDirection = null;\n  newMoveDirection = getRandomInt(1, 4);\n\n  if (this.movingDirection !== newMoveDirection) {\n    if (Number.isInteger(this.x / this.tileSize) && Number.isInteger(this.y / this.tileSize)) {\n      if (!this.tileMap.didCollidedWithEnv(this.x, this.y, newMoveDirection)) {\n        this.movingDirection = newMoveDirection;\n      }\n    }\n  }\n};\n\nGhost.prototype.loadGhostImage = function draw() {\n  this.ghostImage = new Image();\n  this.ghostImage.src = \"../images/redGhost.png\";\n};\n\nmodule.exports = Ghost;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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VyxrQkFBYixDQUFnQyxLQUFLakIsQ0FBckMsRUFBd0MsS0FBS0UsQ0FBN0MsRUFBZ0RvQixnQkFBaEQsQ0FBSixFQUF1RTtRQUNuRSxLQUFLZixlQUFMLEdBQXVCZSxnQkFBdkI7TUFDSDtJQUNKO0VBQ0o7QUFDSixDQVhEOztBQWNBeEIsS0FBSyxDQUFDVyxTQUFOLENBQWdCRCxjQUFoQixHQUFpQyxTQUFTRSxJQUFULEdBQWdCO0VBQzdDLEtBQUtNLFVBQUwsR0FBa0IsSUFBSVMsS0FBSixFQUFsQjtFQUNBLEtBQUtULFVBQUwsQ0FBZ0JVLEdBQWhCLEdBQXVCLHdCQUF2QjtBQUNILENBSEQ7O0FBSUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjlCLEtBQWpCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2FrZS1tYW4tbmVhci15b3UvLi9zcmMvc2NyaXB0cy9naG9zdC5qcz81Y2NlIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IE1vdmluZ0RpcmVjdGlvbiA9IHJlcXVpcmUoXCIuL21vdmluZ0RpcmVjdGlvbnMuanNcIik7XG5cbmZ1bmN0aW9uIGdldFJhbmRvbUludChtaW4sIG1heCkge1xuICAgIG1pbiA9IE1hdGguY2VpbChtaW4pO1xuICAgIG1heCA9IE1hdGguZmxvb3IobWF4KTtcbiAgICByZXR1cm4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKG1heCAtIG1pbiArIDEpKSArIG1pbjtcbn07XG5cbmZ1bmN0aW9uIEdob3N0KG9wdGlvbnMpIHsgXG4gICAgdGhpcy54ID0gb3B0aW9ucy5wb3NpdGlvblswXTtcbiAgICB0aGlzLnkgPSBvcHRpb25zLnBvc2l0aW9uWzFdO1xuICAgIHRoaXMudGlsZVNpemUgPSBvcHRpb25zLnNpemU7XG4gICAgdGhpcy52ZWxvY2l0eSA9IDI7XG4gICAgdGhpcy50aWxlTWFwID0gb3B0aW9ucy50aWxlTWFwO1xuXG4gICAgdGhpcy5tb3ZpbmdEaXJlY3Rpb24gPSBnZXRSYW5kb21JbnQoMSwgNCk7XG5cbiAgICB0aGlzLmxvYWRHaG9zdEltYWdlKCk7XG59XG5cbkdob3N0LnByb3RvdHlwZS5kcmF3ID0gZnVuY3Rpb24gZHJhdyhjdHgsIHBhdXNlKSB7XG4gICAgaWYoIXBhdXNlKSB7XG4gICAgICAgIHRoaXMubW92ZSgpO1xuICAgICAgICB0aGlzLmNoYW5nZURpcmVjdGlvbigpO1xuICAgIH1cbiAgICAvLyBpZih0aGlzLnRpbGVNYXAuZGlkQ29sbGlkZWRXaXRoRW52KHRoaXMueCwgdGhpcy55LCB0aGlzLm1vdmluZ0RpcmVjdGlvbikpIHRoaXMuY2hhbmdlRGlyZWN0aW9uKCk7XG4gICAgY3R4LmRyYXdJbWFnZShcbiAgICAgICAgICAgIHRoaXMuZ2hvc3RJbWFnZSxcbiAgICAgICAgICAgIHRoaXMueCxcbiAgICAgICAgICAgIHRoaXMueSxcbiAgICAgICAgICAgIHRoaXMudGlsZVNpemUsXG4gICAgICAgICAgICB0aGlzLnRpbGVTaXplXG4gICAgICAgIClcbn07XG5cbkdob3N0LnByb3RvdHlwZS5tb3ZlID0gZnVuY3Rpb24gbW92ZSgpIHtcbiAgICBpZighdGhpcy50aWxlTWFwLmRpZENvbGxpZGVkV2l0aEVudih0aGlzLngsIHRoaXMueSwgdGhpcy5tb3ZpbmdEaXJlY3Rpb24pKSB7XG4gICAgICAgIHN3aXRjaCh0aGlzLm1vdmluZ0RpcmVjdGlvbikge1xuICAgICAgICAgICAgY2FzZSBNb3ZpbmdEaXJlY3Rpb24udXA6XG4gICAgICAgICAgICB0aGlzLnkgLT0gdGhpcy52ZWxvY2l0eTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBjYXNlIE1vdmluZ0RpcmVjdGlvbi5kb3duOlxuICAgICAgICAgICAgdGhpcy55ICs9IHRoaXMudmVsb2NpdHk7XG4gICAgICAgICAgICBicmVhazsgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGNhc2UgTW92aW5nRGlyZWN0aW9uLmxlZnQ6XG4gICAgICAgICAgICB0aGlzLnggLT0gdGhpcy52ZWxvY2l0eTtcbiAgICAgICAgICAgIGJyZWFrOyBcbiAgICBcbiAgICAgICAgICAgIGNhc2UgTW92aW5nRGlyZWN0aW9uLnJpZ2h0OlxuICAgICAgICAgICAgdGhpcy54ICs9IHRoaXMudmVsb2NpdHk7XG4gICAgICAgICAgICBicmVhazsgXG4gICAgICAgIH1cbiAgICB9XG59XG5cbkdob3N0LnByb3RvdHlwZS5jaGFuZ2VEaXJlY3Rpb24gPSBmdW5jdGlvbiBjaGFuZ2VEaXJlY3Rpb24oKSB7XG4gICAgbGV0IG5ld01vdmVEaXJlY3Rpb24gPSBudWxsO1xuICAgIG5ld01vdmVEaXJlY3Rpb24gPSBnZXRSYW5kb21JbnQoMSwgNCk7XG5cbiAgICBpZih0aGlzLm1vdmluZ0RpcmVjdGlvbiAhPT0gbmV3TW92ZURpcmVjdGlvbikge1xuICAgICAgICBpZihOdW1iZXIuaXNJbnRlZ2VyKHRoaXMueCAvIHRoaXMudGlsZVNpemUpICYmIE51bWJlci5pc0ludGVnZXIodGhpcy55IC8gdGhpcy50aWxlU2l6ZSkpIHtcbiAgICAgICAgICAgIGlmKCF0aGlzLnRpbGVNYXAuZGlkQ29sbGlkZWRXaXRoRW52KHRoaXMueCwgdGhpcy55LCBuZXdNb3ZlRGlyZWN0aW9uKSkge1xuICAgICAgICAgICAgICAgIHRoaXMubW92aW5nRGlyZWN0aW9uID0gbmV3TW92ZURpcmVjdGlvbjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuXG5HaG9zdC5wcm90b3R5cGUubG9hZEdob3N0SW1hZ2UgPSBmdW5jdGlvbiBkcmF3KCkge1xuICAgIHRoaXMuZ2hvc3RJbWFnZSA9IG5ldyBJbWFnZSgpO1xuICAgIHRoaXMuZ2hvc3RJbWFnZS5zcmMgPSAoXCIuLi9pbWFnZXMvcmVkR2hvc3QucG5nXCIpO1xufVxubW9kdWxlLmV4cG9ydHMgPSBHaG9zdDsiXSwibmFtZXMiOlsiTW92aW5nRGlyZWN0aW9uIiwicmVxdWlyZSIsImdldFJhbmRvbUludCIsIm1pbiIsIm1heCIsIk1hdGgiLCJjZWlsIiwiZmxvb3IiLCJyYW5kb20iLCJHaG9zdCIsIm9wdGlvbnMiLCJ4IiwicG9zaXRpb24iLCJ5IiwidGlsZVNpemUiLCJzaXplIiwidmVsb2NpdHkiLCJ0aWxlTWFwIiwibW92aW5nRGlyZWN0aW9uIiwibG9hZEdob3N0SW1hZ2UiLCJwcm90b3R5cGUiLCJkcmF3IiwiY3R4IiwicGF1c2UiLCJtb3ZlIiwiY2hhbmdlRGlyZWN0aW9uIiwiZHJhd0ltYWdlIiwiZ2hvc3RJbWFnZSIsImRpZENvbGxpZGVkV2l0aEVudiIsInVwIiwiZG93biIsImxlZnQiLCJyaWdodCIsIm5ld01vdmVEaXJlY3Rpb24iLCJOdW1iZXIiLCJpc0ludGVnZXIiLCJJbWFnZSIsInNyYyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/ghost.js\n");

/***/ }),

/***/ "./src/scripts/movingDirections.js":
/*!*****************************************!*\
  !*** ./src/scripts/movingDirections.js ***!
  \*****************************************/
/***/ (function(module) {

eval("const MovingDirection = {\n  up: 4,\n  // avoid using 0\n  down: 1,\n  left: 2,\n  right: 3\n};\nmodule.exports = MovingDirection;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9tb3ZpbmdEaXJlY3Rpb25zLmpzLmpzIiwibmFtZXMiOlsiTW92aW5nRGlyZWN0aW9uIiwidXAiLCJkb3duIiwibGVmdCIsInJpZ2h0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2FrZS1tYW4tbmVhci15b3UvLi9zcmMvc2NyaXB0cy9tb3ZpbmdEaXJlY3Rpb25zLmpzPzRjYmMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgTW92aW5nRGlyZWN0aW9uID0ge1xuICAgIHVwOiA0LCAvLyBhdm9pZCB1c2luZyAwXG4gICAgZG93bjogMSxcbiAgICBsZWZ0OiAyLFxuICAgIHJpZ2h0OiAzLFxuICB9O1xuICBcbm1vZHVsZS5leHBvcnRzID0gTW92aW5nRGlyZWN0aW9uOyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsZUFBZSxHQUFHO0VBQ3BCQyxFQUFFLEVBQUUsQ0FEZ0I7RUFDYjtFQUNQQyxJQUFJLEVBQUUsQ0FGYztFQUdwQkMsSUFBSSxFQUFFLENBSGM7RUFJcEJDLEtBQUssRUFBRTtBQUphLENBQXhCO0FBT0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQk4sZUFBakIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/movingDirections.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYWtlLW1hbi1uZWFyLXlvdS8uL3NyYy9pbmRleC5zY3NzPzk3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;